//----------------------------------------------------------------
// シェープ名の取得
//----------------------------------------------------------------
global proc string getShapeName( string $objectName )
{
	// ローカル
	string $list[];

	// シェープ名の取得
	$list	= `listHistory $objectName`;
	$list	= `ls -type shape $list`;

	// 無
	if( size( $list ) == 0 ){
		return "";
	}

	return $list[ 0 ];
}
//----------------------------------------------------------------
// スキンクラスターの取得
//----------------------------------------------------------------
global proc string getSkinCluster( string $objectName )
{
	// ローカル
	string	$list[];

	// シェープ名の取得
	string	$shapeName = getShapeName( $objectName );
	if( $shapeName == "" ){
		return "";
	}

	// スキンクラスターの取得
	$list	= `listHistory $shapeName`;
	$list	= `ls -type skinCluster $list`;

	// 無
	if( size( $list ) == 0 ){
		return "";
	}

	return $list[ 0 ];
}
//----------------------------------------------------------------
// ジョイントの追加
//----------------------------------------------------------------
proc addJoint( string $objectName, int $global_vertex_names )
{
	// グローバル
	global string	$g_joint_names[];
	global string	$g_joint_names_per_vertex[];

	// ローカル
	int		$i;
	int		$has	= 0;
	int		$joint_cnt;

	if( $global_vertex_names == 1 ){
		// 登録済かチェック
		$joint_cnt	= size( $g_joint_names );
		for( $i = 0 ; $i < $joint_cnt ; $i++ ){
			if( $g_joint_names[ $i ] == $objectName ){
				$has = 1;
				break;
			}
		}

		// 登録済
		if( $has == 1 ){
			return;
		}

		// 追加
		stringArrayInsertAtIndex( $joint_cnt, $g_joint_names, $objectName );
	}else{
		// 登録済かチェック
		$joint_cnt	= size( $g_joint_names_per_vertex );
		for( $i = 0 ; $i < $joint_cnt ; $i++ ){
			if( $g_joint_names_per_vertex[ $i ] == $objectName ){
				$has = 1;
				break;
			}
		}

		// 登録済
		if( $has == 1 ){
			return;
		}

		// 追加
		stringArrayInsertAtIndex( $joint_cnt, $g_joint_names_per_vertex, $objectName );
	}
}
//----------------------------------------------------------------
// ジョイントの取得
//----------------------------------------------------------------
proc getJoint( string $objectName, int $global_vertex_names )
{
	// ローカル
	int		$i;
	int		$cnt;
	string	$list[];

	// スキンクラスターの取得
	string	$skinCluster = getSkinCluster( $objectName );
	if( $skinCluster == "" ){
		return;
	}

	// ジョイントの取得
	string	$list[] = `listConnections -type "joint" ( $skinCluster + ".matrix" )`;

	// 無
	if( size( $list ) == 0 ){
		return;
	}

	$cnt = `size( $list )`;

	// ジョイントの追加
	for( $i = 0 ; $i < 	$cnt ; $i++ ){
		addJoint( $list[ $i ], $global_vertex_names );
	}
}
//----------------------------------------------------------------
// 全体のジョイントの名前からインデックスを返す
//----------------------------------------------------------------
proc int findJointIndex( string $jointName )
{
	// グローバル
	global string	$g_joint_names[];

	// ローカル
	int	$i;
	int	$joint_cnt;

	$joint_cnt	= size( $g_joint_names );

	for( $i = 0 ; $i < $joint_cnt ; $i++ ){
		if( $g_joint_names[ $i ] == $jointName ){
			return $i;
		}
	}

	return -1;
}
//----------------------------------------------------------------
// セルの変更時コールバック
//----------------------------------------------------------------
global proc int SkinListEditorCellChangedCmd( int $row, int $column, string $value )
{
	// グローバル
	global string	$g_table;
	global string	$g_vertex_names[];
	global string	$g_joint_names[];
	global string	$g_joint_names_per_vertex[];
	global int		$g_creating;

	// 作成中
	if( $g_creating == 1 ){
		return 1;
	}

	// セルデータ取得
	string $cellValues[] = `scriptTable -cellIndex $row $column -query -cellValue $g_table`;

	// セルデータが空の場合は変更しない
	if( size( $cellValues ) == 0 ){
		return 0;
	}
	if( $cellValues[ 0 ] == "" ){
		return 0;
	}

	// ローカル
	float $f_value;

	// インデックスに変換
	int $i = $row - 1;
	int $j = $column - 2;

	// 名前の変更はしない
	if( $column == 1 ){
		if( $value != $g_vertex_names[ $i ] ){
			return 0;
		}
		return 1;
	}

	// 文字列を数値化
	$f_value = float( $value );

	// 頂点を選択
	select -r $g_vertex_names[ $i ];

	// シェイプ名を取得
	string $shapeName = getShapeName( $g_vertex_names[ $i ] );
	if( $shapeName == "" ){
		return 0;
	}

	// スキンクラスターの取得
	string $skinClusterName	= getSkinCluster( $g_vertex_names[ $i ] );

	// ウェイトの変更
	skinPercent -tv $g_joint_names[ $j ] $f_value $skinClusterName $g_vertex_names[ $i ];

	return 1;
}
//----------------------------------------------------------------
// １頂点の情報をセルにセット
//----------------------------------------------------------------
proc set_one_vertex( int $row, string $vertexName )
{
	// グローバル
	global string	$g_table;
	global string	$g_joint_names_per_vertex[];

	// ローカル
	int $i;

	// 名前
	scriptTable -edit -cellIndex $row 1 -cellValue $vertexName $g_table;

	// 頂点毎のジョイントをクリア
	clear $g_joint_names_per_vertex;

	// ジョイントの取得
	getJoint( $vertexName, 0 );

	// スキンクラスターの取得
	string $skinClusterName	= getSkinCluster( $vertexName );

	// ウェイトの取得
	float $weightList[]		= `skinPercent -q -v $skinClusterName $vertexName`;

	$joint_per_vertex_cnt = size( $g_joint_names_per_vertex );

	for( $i = 0 ; $i < $joint_per_vertex_cnt ; $i++ ){

		// 全体のジョイントの名前からインデックスを返す
		$find_joint_index = findJointIndex( $g_joint_names_per_vertex[ $i ] );

		int $column = $find_joint_index + 2;

		scriptTable -edit -cellIndex $row $column -cellValue $weightList[ $i ] $g_table;

	}
}
//----------------------------------------------------------------
// 頂点情報の取得
//----------------------------------------------------------------
global proc SkinListEditorGetVertex()
{
	// グローバル
	global string	$g_table;
	global string	$g_vertex_names[];
	global string	$g_joint_names[];
	global int		$g_creating;

	// ローカル
	int $rows;
	int $i;
	int $vertex_cnt;
	int	$joint_cnt;
	int	$joint_per_vertex_cnt;
	int $find_joint_index;

	// 作成中
	$g_creating = 1;

	// 配列をクリア
	clear $g_vertex_names;
	clear $g_joint_names;

	// 選択リスト
	string $sels[]				= `polyListComponentConversion -tv`;
	string $g_vertex_names[]	= `filterExpand -sm 31 $sels`;

	// 全ての行を消す
	$rows = `scriptTable -q -r $g_table`;
	$rows--;
	for( $i = $rows ; $i > 0 ; $i-- ){
		scriptTable -edit -dr $i $g_table;
	}

	// 全ての列を消す
	scriptTable -edit -columns 0 $g_table;

	// 頂点の情報をグローバル変数に格納
	$vertex_cnt = `size $g_vertex_names`;
	for( $i = 0 ; $i < $vertex_cnt ; $i++ ){
		// ジョイントの取得
		getJoint( $g_vertex_names[ $i ], 1 );
	}

	// ジョイントのソート
	$g_joint_names = `sort $g_joint_names`;

	// なにも選択していない
	if( $vertex_cnt == 0 ){
		return;
	}

	// 行挿入
	for( $i = 0 ; $i < $vertex_cnt ; $i++ ){
		scriptTable -edit -insertRow 1 $g_table;
	}

	// 列作成
	$joint_cnt = size( $g_joint_names );
	scriptTable -edit -columns ( $joint_cnt + 1 ) $g_table;

	// スクリプトテーブルにジョイント名をセット
	for( $i = 0 ; $i < $joint_cnt ; $i++ ){
		scriptTable -edit -label ( $i + 2 ) $g_joint_names[ $i ] $g_table;
	}

	// スクリプトテーブルにウェイト値をセット
	for( $i = 0 ; $i < $vertex_cnt ; $i++ ){

		int $row = $i + 1;

		// １頂点の情報をセルにセット
		set_one_vertex( $row, $g_vertex_names[ $i ] );
	}

	// 作成解除
	$g_creating		= 0;

	// 初回変更
	$g_first		= 1;

	// 変更数初期化
	$g_changeCnt	= 0;
}
//----------------------------------------------------------------
// リストから頂点情報の再取得
//----------------------------------------------------------------
global proc SkinListEditorReGetVertex()
{
	// グローバル
	global string	$g_vertex_names[];

	// ローカル
	int $i;
	int $vertex_cnt;

	// 非選択
	select -cl;

	$vertex_cnt = `size $g_vertex_names`;

	for( $i = 0 ; $i < $vertex_cnt ; $i++ ){

		// 最初
		if( $i == 0 ){
			select -r $g_vertex_names[ $i ];
			continue;
		}

		// 追加
		select -tgl $g_vertex_names[ $i ];
	}

	// 頂点情報の取得
	SkinListEditorGetVertex();
}
//----------------------------------------------------------------
// リストの選択で頂点の選択を更新
//----------------------------------------------------------------
global proc SkinListEditorSelectionChangedCmd()
{
	// グローバル
	global string	$g_table;
	global string	$g_vertex_names[];

	// ローカル
	int $i;
	int $vertex_cnt;
	int $row;

	// 現在選択されているセル
	int $selectedCells[] = `scriptTable -q -sc $g_table`;

	// 非選択
	select -cl;

	$vertex_cnt = `size $selectedCells`;

	for( $i = 0 ; $i < $vertex_cnt ; $i++ ){

		$row	=  $selectedCells[ $i ] - 1;

		// 最初
		if( $i == 0 ){
			select -r $g_vertex_names[ $row ];
			$i++;
			continue;
		}

		// 追加
		select -tgl $g_vertex_names[ $row ];
		$i++;
	}
}
//----------------------------------------------------------------
// スキンリストエディタ
//----------------------------------------------------------------
global proc SkinListEditor()
{
	// グローバル
	global string	$g_table;
	global string	$g_vertex_names[];
	global string	$g_joint_names[];
	global string	$g_joint_names_per_vertex[];
	global int		$g_creating;

	// window 作成
	string $window		= `window -t "SkinCompEditort" -widthHeight 1110 300`;

	// formLayout 作成
	string $form		= `formLayout`;

	// スクリプトテーブルの作成
	$g_table			= `scriptTable -r 0
		-c 0
		-ccc SkinListEditorCellChangedCmd
		-scc SkinListEditorSelectionChangedCmd`;

	// 頂点情報の取得ボタンの作成
	string $getButton	= `button -label "頂点情報の取得"	-command "SkinListEditorGetVertex"`;

	// リストから頂点情報の再取得ボタンの作成
	string $regetButton	= `button -label "リストから再取得"	-command "SkinListEditorReGetVertex"`;

	// レイアウト設定
	formLayout -edit
		-attachForm		$g_table		"top"		0
		-attachForm		$g_table		"left"		0
		-attachControl	$g_table		"bottom"	0 $getButton
		-attachForm		$g_table		"right"		0

		-attachNone		$getButton		"top"
		-attachForm		$getButton		"left"		0
		-attachForm		$getButton		"bottom"	0
		-attachPosition $getButton		"right"		0 30

		-attachNone		$regetButton	"top"
		-attachPosition	$regetButton	"left"		0 70
		-attachForm		$regetButton	"bottom"	0
		-attachForm		$regetButton	"right"		0
	$form;

	// window 表示
	showWindow $window;
}
//----------------------------------------------------------------
